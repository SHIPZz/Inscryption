//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherGameHUD;

    public static Entitas.IMatcher<MetaEntity> GameHUD {
        get {
            if (_matcherGameHUD == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.GameHUD);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherGameHUD = matcher;
            }

            return _matcherGameHUD;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity gameHUDEntity { get { return GetGroup(MetaMatcher.GameHUD).GetSingleEntity(); } }
    public Code.Features.UI.GameHUDComponent gameHUD { get { return gameHUDEntity.gameHUD; } }
    public Code.Features.UI.GameHUD GameHUD { get { return gameHUD.Value; } }
    public bool hasGameHUD { get { return gameHUDEntity != null; } }

    public MetaEntity SetGameHUD(Code.Features.UI.GameHUD newValue) {
        if (hasGameHUD) {
            throw new Entitas.EntitasException("Could not set GameHUD!\n" + this + " already has an entity with Code.Features.UI.GameHUDComponent!",
                "You should check if the context already has a gameHUDEntity before setting it or use context.ReplaceGameHUD().");
        }
        var entity = CreateEntity();
        entity.AddGameHUD(newValue);
        return entity;
    }

    public void ReplaceGameHUD(Code.Features.UI.GameHUD newValue) {
        var entity = gameHUDEntity;
        if (entity == null) {
            entity = SetGameHUD(newValue);
        } else {
            entity.ReplaceGameHUD(newValue);
        }
    }

    public void RemoveGameHUD() {
        gameHUDEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Code.Features.UI.GameHUDComponent gameHUD { get { return (Code.Features.UI.GameHUDComponent)GetComponent(MetaComponentsLookup.GameHUD); } }
    public Code.Features.UI.GameHUD GameHUD { get { return gameHUD.Value; } }
    public bool hasGameHUD { get { return HasComponent(MetaComponentsLookup.GameHUD); } }

    public MetaEntity AddGameHUD(Code.Features.UI.GameHUD newValue) {
        var index = MetaComponentsLookup.GameHUD;
        var component = (Code.Features.UI.GameHUDComponent)CreateComponent(index, typeof(Code.Features.UI.GameHUDComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public MetaEntity ReplaceGameHUD(Code.Features.UI.GameHUD newValue) {
        var index = MetaComponentsLookup.GameHUD;
        var component = (Code.Features.UI.GameHUDComponent)CreateComponent(index, typeof(Code.Features.UI.GameHUDComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public MetaEntity RemoveGameHUD() {
        RemoveComponent(MetaComponentsLookup.GameHUD);
        return this;
    }
}
