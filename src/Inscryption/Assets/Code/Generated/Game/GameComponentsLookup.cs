//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Active = 0;
    public const int Collider = 1;
    public const int LocalPosition = 2;
    public const int Parent = 3;
    public const int Damage = 4;
    public const int Destructed = 5;
    public const int Hp = 6;
    public const int Id = 7;
    public const int LayerMask = 8;
    public const int LocalRotation = 9;
    public const int MaxHp = 10;
    public const int Name = 11;
    public const int Renderer = 12;
    public const int SelectedCards = 13;
    public const int SelfDestructTimer = 14;
    public const int SpriteRenderer = 15;
    public const int TrackCameraRotation = 16;
    public const int Transform = 17;
    public const int WorldPosition = 18;
    public const int WorldRotation = 19;
    public const int BoardSlot = 20;
    public const int Occupied = 21;
    public const int OccupiedBy = 22;
    public const int SlotLane = 23;
    public const int SlotOwner = 24;
    public const int AllCardDelivered = 25;
    public const int Card = 26;
    public const int CardAnimator = 27;
    public const int CardClickRequest = 28;
    public const int CardIcon = 29;
    public const int CardOwner = 30;
    public const int CardStack = 31;
    public const int AnimateCardPositionRequest = 32;
    public const int DrawCardFromStackRequest = 33;
    public const int UpdateHandLayoutRequest = 34;
    public const int EnemyOwner = 35;
    public const int HeroOwner = 36;
    public const int InHand = 37;
    public const int Lane = 38;
    public const int OnBoard = 39;
    public const int Placed = 40;
    public const int PlacedCards = 41;
    public const int Selected = 42;
    public const int SelectionAvailable = 43;
    public const int SlotClickRequest = 44;
    public const int SlotId = 45;
    public const int VisualTransform = 46;
    public const int Static = 47;
    public const int Cooldown = 48;
    public const int CooldownLeft = 49;
    public const int CooldownUp = 50;
    public const int ProcessingAvailable = 51;
    public const int Enemy = 52;
    public const int EnemyTurn = 53;
    public const int GameEnd = 54;
    public const int GameEndRequest = 55;
    public const int CardHorizontalOffset = 56;
    public const int CardsInHand = 57;
    public const int HandPosition = 58;
    public const int Hero = 59;
    public const int HeroTurn = 60;
    public const int Request = 61;
    public const int Stats = 62;
    public const int StatsModifiers = 63;
    public const int AttackAnimator = 64;
    public const int DamageAnimator = 65;
    public const int Damaged = 66;
    public const int DamageStatus = 67;
    public const int Status = 68;
    public const int StatusOwner = 69;
    public const int StatusTarget = 70;
    public const int StatusTypeId = 71;
    public const int StatusValue = 72;
    public const int Attacking = 73;
    public const int AttackPhase = 74;
    public const int AttackQueue = 75;
    public const int AttackQueueTimer = 76;
    public const int AttackRequest = 77;
    public const int CardsPlacedThisTurn = 78;
    public const int CurrentTurnPhase = 79;
    public const int DelayedAttackPhase = 80;
    public const int DrawCardRequest = 81;
    public const int EndTurnRequest = 82;
    public const int PhaseTimer = 83;
    public const int PlaceCardRequest = 84;
    public const int SwitchTurnRequest = 85;
    public const int LoadingView = 86;
    public const int SelfInitializedView = 87;
    public const int SelfInitializeEntityViewRequest = 88;
    public const int View = 89;
    public const int ViewAddressableKey = 90;
    public const int ViewAssetReference = 91;
    public const int ViewPath = 92;
    public const int ViewPrefab = 93;

    public const int TotalComponents = 94;

    public static readonly string[] componentNames = {
        "Active",
        "Collider",
        "LocalPosition",
        "Parent",
        "Damage",
        "Destructed",
        "Hp",
        "Id",
        "LayerMask",
        "LocalRotation",
        "MaxHp",
        "Name",
        "Renderer",
        "SelectedCards",
        "SelfDestructTimer",
        "SpriteRenderer",
        "TrackCameraRotation",
        "Transform",
        "WorldPosition",
        "WorldRotation",
        "BoardSlot",
        "Occupied",
        "OccupiedBy",
        "SlotLane",
        "SlotOwner",
        "AllCardDelivered",
        "Card",
        "CardAnimator",
        "CardClickRequest",
        "CardIcon",
        "CardOwner",
        "CardStack",
        "AnimateCardPositionRequest",
        "DrawCardFromStackRequest",
        "UpdateHandLayoutRequest",
        "EnemyOwner",
        "HeroOwner",
        "InHand",
        "Lane",
        "OnBoard",
        "Placed",
        "PlacedCards",
        "Selected",
        "SelectionAvailable",
        "SlotClickRequest",
        "SlotId",
        "VisualTransform",
        "Static",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "ProcessingAvailable",
        "Enemy",
        "EnemyTurn",
        "GameEnd",
        "GameEndRequest",
        "CardHorizontalOffset",
        "CardsInHand",
        "HandPosition",
        "Hero",
        "HeroTurn",
        "Request",
        "Stats",
        "StatsModifiers",
        "AttackAnimator",
        "DamageAnimator",
        "Damaged",
        "DamageStatus",
        "Status",
        "StatusOwner",
        "StatusTarget",
        "StatusTypeId",
        "StatusValue",
        "Attacking",
        "AttackPhase",
        "AttackQueue",
        "AttackQueueTimer",
        "AttackRequest",
        "CardsPlacedThisTurn",
        "CurrentTurnPhase",
        "DelayedAttackPhase",
        "DrawCardRequest",
        "EndTurnRequest",
        "PhaseTimer",
        "PlaceCardRequest",
        "SwitchTurnRequest",
        "LoadingView",
        "SelfInitializedView",
        "SelfInitializeEntityViewRequest",
        "View",
        "ViewAddressableKey",
        "ViewAssetReference",
        "ViewPath",
        "ViewPrefab"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Active),
        typeof(Code.Common.ColliderComponent),
        typeof(Code.Common.Components.LocalPositionComponent),
        typeof(Code.Common.Components.ParentComponent),
        typeof(Code.Common.Damage),
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Hp),
        typeof(Code.Common.Id),
        typeof(Code.Common.LayerMaskComponent),
        typeof(Code.Common.LocalRotation),
        typeof(Code.Common.MaxHp),
        typeof(Code.Common.NameComponent),
        typeof(Code.Common.RendererComponent),
        typeof(Code.Common.SelectedCards),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.SpriteRendererComponent),
        typeof(Code.Common.TrackCameraRotation),
        typeof(Code.Common.TransformComponent),
        typeof(Code.Common.WorldPosition),
        typeof(Code.Common.WorldRotation),
        typeof(Code.Features.Board.BoardSlot),
        typeof(Code.Features.Board.Occupied),
        typeof(Code.Features.Board.OccupiedBy),
        typeof(Code.Features.Board.SlotLane),
        typeof(Code.Features.Board.SlotOwner),
        typeof(Code.Features.Cards.AllCardDelivered),
        typeof(Code.Features.Cards.Card),
        typeof(Code.Features.Cards.CardAnimatorComponent),
        typeof(Code.Features.Cards.CardClickRequest),
        typeof(Code.Features.Cards.CardIcon),
        typeof(Code.Features.Cards.CardOwner),
        typeof(Code.Features.Cards.CardStack),
        typeof(Code.Features.Cards.Components.AnimateCardPositionRequest),
        typeof(Code.Features.Cards.Components.DrawCardFromStackRequest),
        typeof(Code.Features.Cards.Components.UpdateHandLayoutRequest),
        typeof(Code.Features.Cards.EnemyOwner),
        typeof(Code.Features.Cards.HeroOwner),
        typeof(Code.Features.Cards.InHand),
        typeof(Code.Features.Cards.Lane),
        typeof(Code.Features.Cards.OnBoard),
        typeof(Code.Features.Cards.Placed),
        typeof(Code.Features.Cards.PlacedCards),
        typeof(Code.Features.Cards.Selected),
        typeof(Code.Features.Cards.SelectionAvailable),
        typeof(Code.Features.Cards.SlotClickRequest),
        typeof(Code.Features.Cards.SlotId),
        typeof(Code.Features.Cards.VisualTransform),
        typeof(Code.Features.Common.Components.StaticComponent),
        typeof(Code.Features.Cooldowns.Cooldown),
        typeof(Code.Features.Cooldowns.CooldownLeft),
        typeof(Code.Features.Cooldowns.CooldownUp),
        typeof(Code.Features.Cooldowns.ProcessingAvailable),
        typeof(Code.Features.Enemy.Enemy),
        typeof(Code.Features.Enemy.EnemyTurn),
        typeof(Code.Features.Game.GameEnd),
        typeof(Code.Features.Game.GameEndRequest),
        typeof(Code.Features.Hero.CardHorizontalOffset),
        typeof(Code.Features.Hero.CardsInHand),
        typeof(Code.Features.Hero.HandPosition),
        typeof(Code.Features.Hero.Hero),
        typeof(Code.Features.Hero.HeroTurn),
        typeof(Code.Features.Requests.Request),
        typeof(Code.Features.Stats.Stats),
        typeof(Code.Features.Stats.StatsModifiers),
        typeof(Code.Features.Statuses.Components.AttackAnimatorComponent),
        typeof(Code.Features.Statuses.Components.DamageAnimator),
        typeof(Code.Features.Statuses.Components.Damaged),
        typeof(Code.Features.Statuses.Components.DamageStatus),
        typeof(Code.Features.Statuses.Components.StatusComponent),
        typeof(Code.Features.Statuses.Components.StatusOwner),
        typeof(Code.Features.Statuses.Components.StatusTarget),
        typeof(Code.Features.Statuses.Components.StatusTypeIdComponent),
        typeof(Code.Features.Statuses.Components.StatusValue),
        typeof(Code.Features.Turn.Attacking),
        typeof(Code.Features.Turn.AttackPhase),
        typeof(Code.Features.Turn.AttackQueue),
        typeof(Code.Features.Turn.AttackQueueTimer),
        typeof(Code.Features.Turn.AttackRequest),
        typeof(Code.Features.Turn.CardsPlacedThisTurn),
        typeof(Code.Features.Turn.CurrentTurnPhase),
        typeof(Code.Features.Turn.DelayedAttackPhase),
        typeof(Code.Features.Turn.DrawCardRequest),
        typeof(Code.Features.Turn.EndTurnRequest),
        typeof(Code.Features.Turn.PhaseTimer),
        typeof(Code.Features.Turn.PlaceCardRequest),
        typeof(Code.Features.Turn.SwitchTurnRequest),
        typeof(Code.Features.View.LoadingView),
        typeof(Code.Features.View.SelfInitializedView),
        typeof(Code.Features.View.SelfInitializeEntityViewRequest),
        typeof(Code.Features.View.View),
        typeof(Code.Features.View.ViewAddressableKey),
        typeof(Code.Features.View.ViewAssetReference),
        typeof(Code.Features.View.ViewPath),
        typeof(Code.Features.View.ViewPrefab)
    };
}
