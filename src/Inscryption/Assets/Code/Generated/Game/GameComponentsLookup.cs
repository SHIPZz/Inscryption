//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Active = 0;
    public const int ColliderReference = 1;
    public const int Damage = 2;
    public const int Destructed = 3;
    public const int Hp = 4;
    public const int Id = 5;
    public const int LayerMask = 6;
    public const int LocalRotation = 7;
    public const int MaxHp = 8;
    public const int RendererReference = 9;
    public const int SelectedCards = 10;
    public const int SelfDestructTimer = 11;
    public const int SpriteRendererReference = 12;
    public const int TrackCameraRotation = 13;
    public const int Transform = 14;
    public const int WorldPosition = 15;
    public const int WorldRotation = 16;
    public const int BoardSlot = 17;
    public const int OccupiedBy = 18;
    public const int SlotLane = 19;
    public const int SlotOwner = 20;
    public const int Card = 21;
    public const int CardAnimator = 22;
    public const int CardIcon = 23;
    public const int CardOwner = 24;
    public const int CardStack = 25;
    public const int EnemyOwner = 26;
    public const int HeroOwner = 27;
    public const int InHand = 28;
    public const int Lane = 29;
    public const int OnBoard = 30;
    public const int Selected = 31;
    public const int SelectionAvailable = 32;
    public const int Enemy = 33;
    public const int EnemyTurn = 34;
    public const int CardHorizontalOffset = 35;
    public const int CardsInHand = 36;
    public const int HandPosition = 37;
    public const int Hero = 38;
    public const int HeroTurn = 39;
    public const int Stats = 40;
    public const int StatsModifiers = 41;
    public const int DamageStatus = 42;
    public const int Status = 43;
    public const int StatusOwner = 44;
    public const int StatusTarget = 45;
    public const int StatusTypeId = 46;
    public const int StatusValue = 47;
    public const int AttackPhase = 48;
    public const int AttackRequest = 49;
    public const int CardsPlacedThisTurn = 50;
    public const int DrawCardRequest = 51;
    public const int EndTurnRequest = 52;
    public const int PlaceCardRequest = 53;
    public const int SwitchTurnRequest = 54;
    public const int LoadingView = 55;
    public const int SelfInitializedView = 56;
    public const int SelfInitializeEntityViewRequest = 57;
    public const int View = 58;
    public const int ViewAddressableKey = 59;
    public const int ViewAssetReference = 60;
    public const int ViewPath = 61;
    public const int ViewPrefab = 62;
    public const int DrawCardFromStackRequest = 63;
    public const int LocalPosition = 64;
    public const int Parent = 65;
    public const int Static = 66;
    public const int Timer = 67;
    public const int TimerEnded = 68;

    public const int TotalComponents = 69;

    public static readonly string[] componentNames = {
        "Active",
        "ColliderReference",
        "Damage",
        "Destructed",
        "Hp",
        "Id",
        "LayerMask",
        "LocalRotation",
        "MaxHp",
        "RendererReference",
        "SelectedCards",
        "SelfDestructTimer",
        "SpriteRendererReference",
        "TrackCameraRotation",
        "Transform",
        "WorldPosition",
        "WorldRotation",
        "BoardSlot",
        "OccupiedBy",
        "SlotLane",
        "SlotOwner",
        "Card",
        "CardAnimator",
        "CardIcon",
        "CardOwner",
        "CardStack",
        "EnemyOwner",
        "HeroOwner",
        "InHand",
        "Lane",
        "OnBoard",
        "Selected",
        "SelectionAvailable",
        "Enemy",
        "EnemyTurn",
        "CardHorizontalOffset",
        "CardsInHand",
        "HandPosition",
        "Hero",
        "HeroTurn",
        "Stats",
        "StatsModifiers",
        "DamageStatus",
        "Status",
        "StatusOwner",
        "StatusTarget",
        "StatusTypeId",
        "StatusValue",
        "AttackPhase",
        "AttackRequest",
        "CardsPlacedThisTurn",
        "DrawCardRequest",
        "EndTurnRequest",
        "PlaceCardRequest",
        "SwitchTurnRequest",
        "LoadingView",
        "SelfInitializedView",
        "SelfInitializeEntityViewRequest",
        "View",
        "ViewAddressableKey",
        "ViewAssetReference",
        "ViewPath",
        "ViewPrefab",
        "DrawCardFromStackRequest",
        "LocalPosition",
        "Parent",
        "Static",
        "Timer",
        "TimerEnded"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Active),
        typeof(Code.Common.ColliderReference),
        typeof(Code.Common.Damage),
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Hp),
        typeof(Code.Common.Id),
        typeof(Code.Common.LayerMaskComponent),
        typeof(Code.Common.LocalRotation),
        typeof(Code.Common.MaxHp),
        typeof(Code.Common.RendererReference),
        typeof(Code.Common.SelectedCards),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.SpriteRendererReference),
        typeof(Code.Common.TrackCameraRotation),
        typeof(Code.Common.TransformComponent),
        typeof(Code.Common.WorldPosition),
        typeof(Code.Common.WorldRotation),
        typeof(Code.Features.Board.BoardSlot),
        typeof(Code.Features.Board.OccupiedBy),
        typeof(Code.Features.Board.SlotLane),
        typeof(Code.Features.Board.SlotOwner),
        typeof(Code.Features.Cards.Card),
        typeof(Code.Features.Cards.CardAnimatorComponent),
        typeof(Code.Features.Cards.CardIcon),
        typeof(Code.Features.Cards.CardOwner),
        typeof(Code.Features.Cards.CardStack),
        typeof(Code.Features.Cards.EnemyOwner),
        typeof(Code.Features.Cards.HeroOwner),
        typeof(Code.Features.Cards.InHand),
        typeof(Code.Features.Cards.Lane),
        typeof(Code.Features.Cards.OnBoard),
        typeof(Code.Features.Cards.Selected),
        typeof(Code.Features.Cards.SelectionAvailable),
        typeof(Code.Features.Enemy.Enemy),
        typeof(Code.Features.Enemy.EnemyTurn),
        typeof(Code.Features.Hero.CardHorizontalOffset),
        typeof(Code.Features.Hero.CardsInHand),
        typeof(Code.Features.Hero.HandPosition),
        typeof(Code.Features.Hero.Hero),
        typeof(Code.Features.Hero.HeroTurn),
        typeof(Code.Features.Stats.Stats),
        typeof(Code.Features.Stats.StatsModifiers),
        typeof(Code.Features.Statuses.Components.DamageStatus),
        typeof(Code.Features.Statuses.Components.StatusComponent),
        typeof(Code.Features.Statuses.Components.StatusOwner),
        typeof(Code.Features.Statuses.Components.StatusTarget),
        typeof(Code.Features.Statuses.Components.StatusTypeIdComponent),
        typeof(Code.Features.Statuses.Components.StatusValue),
        typeof(Code.Features.Turn.AttackPhase),
        typeof(Code.Features.Turn.AttackRequest),
        typeof(Code.Features.Turn.CardsPlacedThisTurn),
        typeof(Code.Features.Turn.DrawCardRequest),
        typeof(Code.Features.Turn.EndTurnRequest),
        typeof(Code.Features.Turn.PlaceCardRequest),
        typeof(Code.Features.Turn.SwitchTurnRequest),
        typeof(Code.Features.View.LoadingView),
        typeof(Code.Features.View.SelfInitializedView),
        typeof(Code.Features.View.SelfInitializeEntityViewRequest),
        typeof(Code.Features.View.View),
        typeof(Code.Features.View.ViewAddressableKey),
        typeof(Code.Features.View.ViewAssetReference),
        typeof(Code.Features.View.ViewPath),
        typeof(Code.Features.View.ViewPrefab),
        typeof(DrawCardFromStackRequest),
        typeof(LocalPositionComponent),
        typeof(ParentComponent),
        typeof(StaticComponent),
        typeof(TimerComponent),
        typeof(TimerEndedComponent)
    };
}
