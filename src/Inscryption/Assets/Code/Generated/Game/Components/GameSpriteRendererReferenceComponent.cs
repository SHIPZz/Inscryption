//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpriteRendererReference;

    public static Entitas.IMatcher<GameEntity> SpriteRendererReference {
        get {
            if (_matcherSpriteRendererReference == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpriteRendererReference);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpriteRendererReference = matcher;
            }

            return _matcherSpriteRendererReference;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Common.SpriteRendererReference spriteRendererReference { get { return (Code.Common.SpriteRendererReference)GetComponent(GameComponentsLookup.SpriteRendererReference); } }
    public UnityEngine.SpriteRenderer SpriteRendererReference { get { return spriteRendererReference.Value; } }
    public bool hasSpriteRendererReference { get { return HasComponent(GameComponentsLookup.SpriteRendererReference); } }

    public GameEntity AddSpriteRendererReference(UnityEngine.SpriteRenderer newValue) {
        var index = GameComponentsLookup.SpriteRendererReference;
        var component = (Code.Common.SpriteRendererReference)CreateComponent(index, typeof(Code.Common.SpriteRendererReference));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceSpriteRendererReference(UnityEngine.SpriteRenderer newValue) {
        var index = GameComponentsLookup.SpriteRendererReference;
        var component = (Code.Common.SpriteRendererReference)CreateComponent(index, typeof(Code.Common.SpriteRendererReference));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveSpriteRendererReference() {
        RemoveComponent(GameComponentsLookup.SpriteRendererReference);
        return this;
    }
}
