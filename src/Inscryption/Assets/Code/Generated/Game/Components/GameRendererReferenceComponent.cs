//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRendererReference;

    public static Entitas.IMatcher<GameEntity> RendererReference {
        get {
            if (_matcherRendererReference == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RendererReference);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRendererReference = matcher;
            }

            return _matcherRendererReference;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Common.RendererReference rendererReference { get { return (Code.Common.RendererReference)GetComponent(GameComponentsLookup.RendererReference); } }
    public UnityEngine.Renderer RendererReference { get { return rendererReference.Value; } }
    public bool hasRendererReference { get { return HasComponent(GameComponentsLookup.RendererReference); } }

    public GameEntity AddRendererReference(UnityEngine.Renderer newValue) {
        var index = GameComponentsLookup.RendererReference;
        var component = (Code.Common.RendererReference)CreateComponent(index, typeof(Code.Common.RendererReference));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRendererReference(UnityEngine.Renderer newValue) {
        var index = GameComponentsLookup.RendererReference;
        var component = (Code.Common.RendererReference)CreateComponent(index, typeof(Code.Common.RendererReference));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRendererReference() {
        RemoveComponent(GameComponentsLookup.RendererReference);
        return this;
    }
}
