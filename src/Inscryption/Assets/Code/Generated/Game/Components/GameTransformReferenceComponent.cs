//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTransformReference;

    public static Entitas.IMatcher<GameEntity> TransformReference {
        get {
            if (_matcherTransformReference == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TransformReference);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTransformReference = matcher;
            }

            return _matcherTransformReference;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Common.TransformReference transformReference { get { return (Code.Common.TransformReference)GetComponent(GameComponentsLookup.TransformReference); } }
    public UnityEngine.Transform TransformReference { get { return transformReference.Value; } }
    public bool hasTransformReference { get { return HasComponent(GameComponentsLookup.TransformReference); } }

    public GameEntity AddTransformReference(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.TransformReference;
        var component = (Code.Common.TransformReference)CreateComponent(index, typeof(Code.Common.TransformReference));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTransformReference(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.TransformReference;
        var component = (Code.Common.TransformReference)CreateComponent(index, typeof(Code.Common.TransformReference));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTransformReference() {
        RemoveComponent(GameComponentsLookup.TransformReference);
        return this;
    }
}
