//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherViewAssetReference;

    public static Entitas.IMatcher<GameEntity> ViewAssetReference {
        get {
            if (_matcherViewAssetReference == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ViewAssetReference);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherViewAssetReference = matcher;
            }

            return _matcherViewAssetReference;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Features.View.ViewAssetReference viewAssetReference { get { return (Code.Features.View.ViewAssetReference)GetComponent(GameComponentsLookup.ViewAssetReference); } }
    public UnityEngine.AddressableAssets.AssetReference ViewAssetReference { get { return viewAssetReference.Value; } }
    public bool hasViewAssetReference { get { return HasComponent(GameComponentsLookup.ViewAssetReference); } }

    public GameEntity AddViewAssetReference(UnityEngine.AddressableAssets.AssetReference newValue) {
        var index = GameComponentsLookup.ViewAssetReference;
        var component = (Code.Features.View.ViewAssetReference)CreateComponent(index, typeof(Code.Features.View.ViewAssetReference));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceViewAssetReference(UnityEngine.AddressableAssets.AssetReference newValue) {
        var index = GameComponentsLookup.ViewAssetReference;
        var component = (Code.Features.View.ViewAssetReference)CreateComponent(index, typeof(Code.Features.View.ViewAssetReference));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveViewAssetReference() {
        RemoveComponent(GameComponentsLookup.ViewAssetReference);
        return this;
    }
}
