//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhaseTimer;

    public static Entitas.IMatcher<GameEntity> PhaseTimer {
        get {
            if (_matcherPhaseTimer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PhaseTimer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhaseTimer = matcher;
            }

            return _matcherPhaseTimer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Features.Turn.PhaseTimer phaseTimer { get { return (Code.Features.Turn.PhaseTimer)GetComponent(GameComponentsLookup.PhaseTimer); } }
    public bool hasPhaseTimer { get { return HasComponent(GameComponentsLookup.PhaseTimer); } }

    public GameEntity AddPhaseTimer(float newElapsedTime, float newTargetDuration) {
        var index = GameComponentsLookup.PhaseTimer;
        var component = (Code.Features.Turn.PhaseTimer)CreateComponent(index, typeof(Code.Features.Turn.PhaseTimer));
        component.ElapsedTime = newElapsedTime;
        component.TargetDuration = newTargetDuration;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplacePhaseTimer(float newElapsedTime, float newTargetDuration) {
        var index = GameComponentsLookup.PhaseTimer;
        var component = (Code.Features.Turn.PhaseTimer)CreateComponent(index, typeof(Code.Features.Turn.PhaseTimer));
        component.ElapsedTime = newElapsedTime;
        component.TargetDuration = newTargetDuration;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemovePhaseTimer() {
        RemoveComponent(GameComponentsLookup.PhaseTimer);
        return this;
    }
}
